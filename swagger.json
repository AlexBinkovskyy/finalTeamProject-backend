{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Aqua track REST-API Documentation",
    "description": "Documentation of the API"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://finalteamproject-backend.onrender.com/api" }],
  "tags": [
    { "name": "Users", "description": "Authorization endpoints" },
    { "name": "Water", "description": "Water consumption services endpoints" }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/users/verify/{token}": {
      "get": {
        "tags": ["Users"],
        "summary": "User email verification end-point",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Verification token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a60b9bed758d12f710d227b82bcc4077"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email address of the user"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message indicating the action performed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },

    "/users/verify": {
      "post": {
        "tags": ["Users"],
        "summary": "User email resend verification end-point",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email",
                    "example": "example@test.net"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message indicating the action performed",
                      "example": "Verification email sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },

    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User log-in",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User log-out",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "description": "Authorization token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a60b9bed758d12f710d227b82bcc4077..."
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Getting credentials of the user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a60b9bed758d12f710d227b82bcc4077..."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentResponse"
                }
              }
            }
          }
        }
      }
    },

    "/users/update": {
      "put": {
        "tags": ["Users"],
        "summary": "Update users settings",
        "parameters": [],
        "requestBody": {
          "description": "Example of required naming of fields",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUserDataRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateUserDataResponse"
                }
              }
            }
          },
          "401": {
            "description": "Rejected opration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/users/refreshtoken": {},

    "/water/add": {
      "post": {
        "summary": "Add water consumption data",
        "description": "Adds water consumption data for the current user.",
        "tags": ["Water"],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "example": "2024-01-01"
                  },
                  "time": {
                    "type": "string",
                    "format": "time",
                    "example": "10:00"
                  },
                  "amount": {
                    "type": "number",
                    "example": 270
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCrudResponse"
                }
              }
            }
          }
        }
      }
    },
    "/water/edit/{id}": {
      "put": {
        "summary": "Update water consumption data",
        "description": "Updates water consumption data for the current user with the specified identifier.",
        "tags": ["Water"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the water consumption record",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "time": {
                    "type": "string",
                    "format": "time",
                    "example": "10:00"
                  },
                  "amount": {
                    "type": "number",
                    "example": 250
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCrudResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/water/delete/{id}": {
      "delete": {
        "summary": "Delete water consumption data",
        "description": "Deletes water consumption data for the current user with the specified identifier.",
        "tags": ["Water"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the water consumption record",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCrudResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/water/dayconsumption/{date}": {
      "get": {
        "summary": "Get water consumption data by date",
        "description": "Retrieves water consumption data for the current user for the specified date.",
        "tags": ["Water"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Date to retrieve water consumption data (format: 'YYYY-MM-DD')",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCrudResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/water/monthconsumption/{date}": {
      "get": {
        "summary": "Get water consumption data by month",
        "description": "Retrieves water consumption data for the current user for the specified month and year.",
        "tags": ["Water"],
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Month and year to retrieve water consumption data (format: 'YYYY.MM')",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterCrudResponseArray"
                }
              }
            }
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwqerty1234"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "description": "user's registration credential",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "example@test.net"
              },
              "message": {
                "type": "string",
                "example": "Email was sent"
              }
            }
          }
        }
      },
      "LogInRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwqerty1234"
          }
        }
      },
      "LogInResponse": {
        "type": "object",
        "properties": {
          "loggedUser": {
            "type": "object",
            "description": "logged user credentials",
            "properties": {
              "_id": {
                "type": "string",
                "example": "663dfa830247bf578218088e"
              },
              "email": { "type": "string", "example": "example.test.net" },
              "avatarUrl": {
                "type": "string",
                "example": "https://finalteamproject-backend.onrender.com/icon/defaultAvatar.png"
              },
              "token": {
                "type": "string",
                "example": "eyJhbGciOi12UzI1NiIsInR5cCI6IkpX..."
              }
            }
          }
        }
      },
      "GetCurrentResponse": {
        "type": "object",
        "description": "Response object of current user",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Users ID",
                "example": "a60b9bed758d12f710d227b82bcc4077"
              },
              "name": {
                "type": "string",
                "description": "Users name",
                "example": "Barbara Straisand, uwe-owee-ooo-weee"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "example@test.net"
              },
              "gender": {
                "type": "string",
                "description": "User gender",
                "example": "male or female"
              },
              "dailyNorma": {
                "type": "number",
                "description": "Users counted daily norma of water",
                "example": "1.8"
              },
              "weight": {
                "type": "number",
                "description": "Users weight",
                "example": "60"
              },
              "activeTime": {
                "type": "number",
                "description": "Users active time",
                "example": "2"
              },
              "goal": {
                "type": "string",
                "description": "Users water consumotion goal",
                "example": "2.2"
              },
              "avatarUrl": {
                "type": "string",
                "description": "User's avatar URL",
                "format": "url",
                "example": "https://finalteamproject-backend.onrender.com/icon/defaultAvatar.png"
              },
              "token": {
                "type": "string",
                "description": "User's access token",
                "example": "a60b9bed758d12f710d227b82bcc4077..."
              }
            }
          }
        }
      },
      "updateUserDataRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 20,
            "example": "Josh Broling"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female"],
            "example": "'male' or 'female' only"
          },
          "dailyNorma": {
            "type": "number",
            "minimum": 500,
            "maximum": 5000,
            "example": "range from 500 to 5000"
          },
          "weight": {
            "type": "number",
            "example": 60
          },
          "activeTime": {
            "type": "number",
            "example": 2
          },
          "goal": {
            "type": "number",
            "description": "user's goal of water consumption due day, L",
            "example": "2"
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "example": "d:/images/example_avatar.jpg",
            "description": "file with image format, such as jpeg, png, gif etc.. and max weigth for aprox. 10Mb",
            "content": {
              "image/*": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "maxLength": 10485760
                }
              }
            }
          }
        }
      },
      "updateUserDataResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "JWT access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2NDBkNDc1..."
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Unique users identifier",
                "example": "6640d475a1f0ed15ds777553"
              },
              "name": {
                "type": "string",
                "example": "Josh Broling"
              },
              "email": {
                "type": "string",
                "example": "example@test.net"
              },
              "gender": {
                "type": "string",
                "enum": ["male", "female"],
                "example": "male"
              },
              "dailyNorma": {
                "type": "number",
                "example": "1500"
              },
              "weight": {
                "type": "number",
                "example": 60
              },
              "activeTime": {
                "type": "number",
                "example": 2
              },
              "goal": {
                "type": "number",
                "example": "2"
              },
              "avatar": {
                "type": "string",
                "example": "https://finalteamproject-backend.onrender.com/icon/defaultAvatar.png"
              }
            }
          }
        }
      },

      "WaterCrudResponse": {
        "type": "object",
        "description": "Water consumption data for the specified date",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of the water consumption data",
            "format": "date",
            "example": "2024-01-03"
          },
          "dailyCount": {
            "type": "array",
            "description": "Daily count of water consumption",
            "items": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "description": "Amount of water consumed",
                  "example": 500
                },
                "time": {
                  "type": "string",
                  "description": "Time of water consumption",
                  "format": "time",
                  "example": "19:20"
                },
                "_id": {
                  "type": "string",
                  "description": "Unique identifier of the record",
                  "example": "664105786ed504010db56e2e"
                }
              }
            }
          }
        }
      },
      "WaterCrudResponseArray": {
        "type": "array",
        "description": "Array of water consumption data",
        "items": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Date of the water consumption data",
              "format": "date",
              "example": "2024-01-03"
            },
            "dailyCount": {
              "type": "array",
              "description": "Daily count of water consumption",
              "items": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "description": "Amount of water consumed",
                    "example": 500
                  },
                  "time": {
                    "type": "string",
                    "description": "Time of water consumption",
                    "format": "time",
                    "example": "19:20"
                  },
                  "_id": {
                    "type": "string",
                    "description": "Unique identifier of the record",
                    "example": "664105786ed504010db56e2e"
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
