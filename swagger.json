{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Aqua track REST-API Documentation",
    "description": "Documentation of the API"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://finalteamproject-backend.onrender.com/api" }],
  "tags": [
    { "name": "Users", "description": "Authorization endpoints" },
    { "name": "Water", "description": "Water consumption services endpoints" }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/users/verify/{token}": {
      "get": {
        "tags": ["Users"],
        "summary": "User email verification end-point",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Verification token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a60b9bed758d12f710d227b82bcc4077"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email address of the user"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message indicating the action performed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },

    "/users/verify": {
      "post": {
        "tags": ["Users"],
        "summary": "User email resend verification end-point",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User's email",
                    "format": "email",
                    "example": "example@test.net"
                  }
                },
                "required": ["email"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Message indicating the action performed",
                      "example": "Verification email sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },

    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User log-in",
        "parameters": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },

    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User log-out",
        "security": [{ "Bearer": [] }],
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Authorization token",
          "required": true,
          "schema": {
            "type": "string",
            "example": "a60b9bed758d12f710d227b82bcc4077..."
          }
        }],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not authorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Getting credentials of the user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a60b9bed758d12f710d227b82bcc4077..."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCurrentResponse"
                }
              }
            }
          }
        }
      }
    },

    "/users/:userId": {},
    "/users/refreshtoken": {},

    "/water/add": {},
    "/water/edit": {},
    "/water/delete": {},
    "/water/daycosumption": {},
    "/water/monthconsumption": {}
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwqerty1234"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "description": "user's registration credential",
            "properties": {
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "example@test.net"
              },
              "message": {
                "type": "string",
                "example": "Email was sent"
              }
            }
          }
        }
      },
      "LogInRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwqerty1234"
          }
        }
      },
      "LogInResponse": {
        "type": "object",
        "properties": {
          "loggedUser": {
            "type": "object",
            "description": "logged user credentials",
            "properties": {
              "_id": {
                "type": "string",
                "example": "663dfa830247bf578218088e"
              },
              "email": { "type": "string", "example": "example.test.net" },
              "avatarUrl": {
                "type": "string",
                "example": "https://finalteamproject-backend.onrender.com/icon/defaultAvatar.png"
              },
              "token": {
                "type": "string",
                "example": "eyJhbGciOi12UzI1NiIsInR5cCI6IkpX..."
              }
            }
          }
        }
      },
      "GetCurrentResponse": {
        "type": "object",
        "description": "Response object of current user",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Users ID",
                "example": "a60b9bed758d12f710d227b82bcc4077"
              },
              "name": {
                "type": "string",
                "description": "Users name",
                "example": "Barbara Straisand, uwe-owee-ooo-weee"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email",
                "example": "example@test.net"
              },
              "gender": {
                "type": "string",
                "description": "User gender",
                "example": "male or female"
              },
              "dailyNorma": {
                "type": "number",
                "description": "Users counted daily norma of water",
                "example": "1.8"
              },
              "weight": {
                "type": "number",
                "description": "Users weight",
                "example": "60"
              },
              "activeTime": {
                "type": "number",
                "description": "Users active time",
                "example": "2"
              },
              "goal": {
                "type": "string",
                "description": "Users water consumotion goal",
                "example": "2.2"
              },
              "avatarUrl": {
                "type": "string",
                "description": "User's avatar URL",
                "format": "url",
                "example": "https://finalteamproject-backend.onrender.com/icon/defaultAvatar.png"
              },
              "token": {
                "type": "string",
                "description": "User's access token",
                "example": "a60b9bed758d12f710d227b82bcc4077..."
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
